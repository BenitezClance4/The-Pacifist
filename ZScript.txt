version "4.1.3"

class HD7mMag200:HDMagAmmo{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "Pacifist Magazine"
		//$Sprite "PCMGA0"

		hdmagammo.maxperunit 200;
		hdmagammo.roundtype "SevenMilAmmo";
		hdmagammo.roundbulk (50*0.5)/30.;
		hdmagammo.magbulk 50;
		hdpickup.refid "7mg";
		tag "7.76mm box magazine";
		inventory.pickupmessage "Picked up a 7.76mm box magazine.";
		scale 0.8;
	}
	override string,string,name,double getmagsprite(int thismagamt){
		string magsprite=(thismagamt>0)?"PCMGA0":"PCMGB0";
		return magsprite,"RBRSA3A7","SevenMilAmmo",1.7;
	}
	override void GetItemsThatUseThis(){
		itemsthatusethis.push("HDPacifist");
	}
	states{
	spawn:
		PCMG A -1;
		stop;
	spawnempty:
		PCMG B -1{
			brollsprite=true;brollcenter=true;
			roll=randompick(0,0,0,0,2,2,2,2,1,3)*90;
		}stop;
	}
}

class HDPacifist:AutoReloadingThingy{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "The Pacifist"
		//$Sprite "PACIA0"

		scale 0.8;
		inventory.pickupmessage "You got the Medium Machine Gun!";
		weapon.selectionorder 40;
		weapon.slotnumber 6;
		weapon.kickback 24;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		weapon.bobstyle "normal";
		obituary "%o has been pacified by %k.";
		hdweapon.barrelsize 30,3,4;
		hdweapon.refid "PAC";
		tag "Pacifist Medium Machine Gun";
	}

	override string,double getpickupsprite(){
		return "PACI"..((weaponstatus[PACS_MAG]<0)?"B":"A").."0",1.;
	}

	override void postbeginplay(){
		super.postbeginplay();
		weaponspecial=1337;
	}

	override double gunmass(){
		return 5+(weaponstatus[PACS_MAG]<0)?-0.5:(weaponstatus[PACS_MAG]*0.02);
	}
	override double weaponbulk(){
		int mg=weaponstatus[PACS_MAG];
		if(mg<0)return 120;
		else return (120+2)+mg;
	}

	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD7mMag200")));
			if(nextmagloaded>=200){
				sb.drawimage("PCMGA0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.6,1.6));
			}else if(nextmagloaded<1){
				sb.drawimage("PCMGB0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1.6,1.6));
			}else sb.drawbar(
				"PCMGNORM","PCMGGREY",
				nextmagloaded,200,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD7mMag200"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		string llba="RBRSA3A7";

sb.drawwepnum(hdw.weaponstatus[1]%100,50,posy:-10);
		bool PACF_FULLAUTO=!(hdw.weaponstatus[0]&PACF_FULLAUTO);
		sb.drawstring(
			sb.pnewsmallfont,PACF_FULLAUTO?"S":"F",(-30,-30),
			sb.DI_TEXT_ALIGN_RIGHT|sb.DI_TRANSLATABLE|sb.DI_SCREEN_CENTER_BOTTOM,
			PACF_FULLAUTO?Font.CR_DARKRED:Font.CR_GREEN
		);

		int lod=max(hdw.weaponstatus[PACS_MAG],0);
		sb.drawwepnum(lod,200);
		if(hdw.weaponstatus[PACS_CHAMBER]==2){
			sb.drawwepdot(-16,-10,(3,1));
			lod++;
		}
	}

	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
			int cx,cy,cw,ch;
			[cx,cy,cw,ch]=screen.GetClipRect();
			sb.SetClipRect(
				-24+bob.x,-16+bob.y,40,32,
				sb.DI_SCREEN_CENTER
			);
			vector2 bobb=bob*3;
			bobb.y=clamp(bobb.y,-8,8);
			sb.drawimage(
				"pacfs",(0,-9)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				alpha:0.8
			);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"pacbs",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
		);
	}

	override void ForceBasicAmmo(){
		owner.A_TakeInventory("SevenMilAmmo");
		owner.A_TakeInventory("HD7mMag200");
		owner.A_GiveInventory("HD7mMag200");
	}

	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_FIREMODE.."  Safe/Fire\n"
		..WEPHELP_RELOADRELOAD
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		..WEPHELP_UNLOAD.."+"..WEPHELP_USE.."  Assemble rounds"
		;
	}

	action void A_Chamber(bool unloadonly=false){
		A_PlaySound("weapons/libchamber",6);
		actor brsss=null;
		if(invoker.weaponstatus[PACS_CHAMBER]==1){

				double cosp=cos(pitch);
				[cosp,brsss]=A_SpawnItemEx(
					"HDSpent7mm",cos(pitch)*8,1,height-7-sin(pitch)*8,
					cos(pitch)*cos(angle-80)*6+vel.x,
					cos(pitch)*sin(angle-80)*6+vel.y,
					-sin(pitch)*6+vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel+=vel;
				brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
		}else if(invoker.weaponstatus[LIBS_CHAMBER]==2){
			double fc=max(pitch*0.01,5);
			double cosp=cos(pitch);
			[cosp,brsss]=A_SpawnItemEx(
					"HDLoose7mm",cos(pitch)*8,1,height-7-sin(pitch)*8,
					cos(pitch)*cos(angle-80)*6+vel.x,
					cos(pitch)*sin(angle-80)*6+vel.y,
					-sin(pitch)*6+vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			brsss.vel+=vel;
			brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
		}
		if(!unloadonly && invoker.weaponstatus[PACS_MAG]>0){
			invoker.weaponstatus[PACS_MAG]--;
			invoker.weaponstatus[PACS_CHAMBER]=2;
		}else{
			invoker.weaponstatus[PACS_CHAMBER]=0;
			if(brsss!=null)brsss.vel=vel+(cos(angle),sin(angle),-2);
		}
	}

	states{
	select0:
		PACG A 0 A_Overlay(2,"droop");
		goto select0bfg;
	deselect0:
		PACG A 0;
		goto deselect0bfg;

	droop:
		TNT1 A 1{
			if(pitch<frandom(5,8)&&(!gunbraced())){
				if(countinv("IsMoving")>2 && countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.1,0.1),
						frandom(0.1,clamp(1-pitch,0.1,0.3)));
				}else{
					A_MuzzleClimb(frandom(-0.06,0.06),
						frandom(0.1,clamp(1-pitch,0.06,0.12)));
				}
			}
		}loop;

	ready:
		PACG A 1 A_WeaponReady(WRF_ALL);
		goto readyend;

	user3:
		---- A 0 A_MagManager("HD7mMag200");
		goto ready;

	fire:
		PACG A 0;
	hold:
		PACG A 1{
			if(
				!(invoker.weaponstatus[0]&PACF_FULLAUTO)
				||invoker.weaponstatus[PACS_CHAMBER]!=2
			)setweaponstate("nope");
		}goto shoot;

	firegun:
		PACG A 0;
	shoot:
		PACG B 3{
			if(invoker.weaponstatus[PACS_CHAMBER]==2)A_Gunflash();
			else setweaponstate("chamber_manual");
			A_WeaponReady(WRF_NONE);
		}
		PACG A 1 A_Chamber();
		PACG A 0 A_Refire();
		goto nope;
	flash:
		PACF A 1 bright{
			A_Light1();
						if (hdpc_plutoniamode)
						{
							A_PlaySound("weapons/pacifier2");
						}else{
			A_PlaySound("weapons/pacifier1",7);
			}

			HDBulletActor.FireBullet(self,"HDB_776");
				HDFlashAlpha(16);
	A_MuzzleClimb(frandom(0.4,0.6),-frandom(0.4,0.6));	A_MuzzleClimb(0,0,-frandom(0.1,0.3),-frandom(0.4,0.8));
			A_MuzzleClimb(
				-frandom(0.8,1.),-frandom(1.2,1.6),
				frandom(0.4,0.5),frandom(0.6,0.8)
			);
			A_ZoomRecoil(0.99);

			invoker.weaponstatus[PACS_CHAMBER]=1;
			invoker.weaponstatus[PACS_HEAT]+=2;
			A_AlertMonsters();
		}
		goto lightdone;
	chamber_manual:
		PACG A 1 offset(-1,34){
			if(
				invoker.weaponstatus[PACS_CHAMBER]==2
				||invoker.weaponstatus[PACS_MAG]<1
			)setweaponstate("nope");
		}
		PACG B 1 offset(-2,36)A_PlaySound("weapons/libchamber");
		PACG B 1 offset(-2,38)A_Chamber();
		PACG A 1 offset(-1,34);
		goto nope;


	firemode:
		---- A 0{
			invoker.weaponstatus[0]^=PACF_FULLAUTO;
		}goto nope;


	unloadchamber:
		PACG B 1 offset(-1,34){
			if(
				invoker.weaponstatus[LIBS_CHAMBER]<1
			)setweaponstate("nope");
		}
		PACG B 1 offset(-2,36)A_Chamber(true);
		PACG B 1 offset(-2,38);
		PACG A 1 offset(-1,34);
		goto nope;

	loadchamber:
		PACG A 0 A_JumpIf(invoker.weaponstatus[PACS_CHAMBER]>0,"nope");
		PACG A 0 A_JumpIf(!countinv("SevenMilAmmo"),"nope");
		PACG A 1 offset(0,34) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		PACG A 1 offset(2,36);
		PACG B 1 offset(5,40);
		PACG B 4 offset(4,39){
			if(countinv("SevenMilAmmo")){
				A_TakeInventory("SevenMilAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[PACS_CHAMBER]=2;
				A_PlaySound("weapons/libchamber2",CHAN_WEAPON);
				A_PlaySound("weapons/libchamber2a",6,0.7);
			}
		}
		PACG B 7 offset(5,37);
		PACG B 1 offset(2,36);
		PACG A 1 offset(0,34);
		goto readyend;

	user4:
	unload:
		---- A 1 A_CheckChug(pressinguse()); //DO NOT set this frame to zero
		PACG A 0{
			invoker.weaponstatus[0]|=PACF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[PACS_MAG]>=0  
			){
				return resolvestate("unmag");
			}else if(
				invoker.weaponstatus[PACS_CHAMBER]>0  
			){
				return resolvestate("unloadchamber");
			}
			return resolvestate("nope");
		}
	reload:
		PACG A 0{
			int inmag=invoker.weaponstatus[PACS_MAG];
			invoker.weaponstatus[0]&=~PACF_JUSTUNLOAD;
			if(
				//no point reloading
				inmag>=200
				||(
					//no mags to load and can't directly load chamber
					!countinv("HD7mMag200")
					&&(
						inmag>=0
						||invoker.weaponstatus[PACS_CHAMBER]>0
						||!countinv("SevenMilAmmo")
					)
				)
			)return resolvestate("nope");
			else if(
				//no mag, empty chamber, have loose rounds
				inmag<0
				&&!countinv("HD7mMag200")
				&&invoker.weaponstatus[PACS_CHAMBER]<1
				&&countinv("SevenMilAmmo")
			)return resolvestate("loadchamber");
			else if(
				invoker.weaponstatus[PACS_MAG]>0  
			){
				//if full mag and unchambered, chamber
				if(
					invoker.weaponstatus[PACS_MAG]>=200  
					&&invoker.weaponstatus[PACS_CHAMBER]!=2
				){
					return resolvestate("chamber_manual");
				}				
			}return resolvestate("unmag");
		}

	unmag:
		PACG A 1 offset(0,34);
		PACG A 1 offset(2,36);
		PACG B 1 offset(4,40);
		PACG B 2 offset(8,42){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		}
		PACG B 4 offset(14,46){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_PlaySound ("weapons/rifleload");
		}
		PACG B 0{
			int magamt=invoker.weaponstatus[PACS_MAG];
			if(magamt<0){setweaponstate("magout");return;}
			invoker.weaponstatus[LIBS_MAG]=-1;	HDMagAmmo.SpawnMag(self,"HD7mMag200",magamt);
				setweaponstate("pocketmag");
		}
	pocketmag:
		PACG B 7 offset(12,52)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		PACG B 0 A_PlaySound("weapons/pocket");
		PACG BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		PACG B 0{
		}goto magout;
	magout:
		PACG B 4{
			invoker.weaponstatus[PACS_MAG]=-1;
			if(invoker.weaponstatus[0]&PACF_JUSTUNLOAD)setweaponstate("reloaddone");
		}goto loadmag;


	loadmag:
		PACG B 0 A_PlaySound("weapons/pocket",CHAN_WEAPON);
		PACG BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.4),frandom(-0.2,0.8));
		PACG B 6 offset(12,52){
			let mmm=hdmagammo(findinventory("HD7mMag200"));
			if(mmm){
				invoker.weaponstatus[PACS_MAG]=mmm.TakeMag(true);
				A_PlaySound("weapons/rifleclick",CHAN_BODY);
				A_PlaySound("weapons/rifleload",CHAN_WEAPON);
			}
		}
		PACG B 2 offset(8,46) A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		goto reloaddone;

	reloaddone:
		PACG B 1 offset (4,40);
		PACG A 1 offset (2,36){
			if(
				invoker.weaponstatus[PACS_CHAMBER]!=2
				&&invoker.weaponstatus[PACS_MAG]>0  
			)A_Chamber();
		}
		PACG A 1 offset (0,34);
		goto nope;

	spawn:
		PACI A -1 nodelay{
			if(invoker.weaponstatus[PACS_MAG]<0)frame=1;

			if(
				invoker.makinground
				&&invoker.brass>0
				&&invoker.powders>=3
			)setstatelabel("chug");
	}
	}
	override void InitializeWepStats(bool idfa){
		weaponstatus[PACS_MAG]=200;
		weaponstatus[PACS_CHAMBER]=2;
	}

	override void loadoutconfigure(string input){

		int firemode=getloadoutvar(input,"firemode",1);
		if(!firemode)weaponstatus[0]&=~PACF_FULLAUTO;
		else if(firemode>0)weaponstatus[0]|=PACF_FULLAUTO;
	}
}

enum HDPacifierStatus{
	PACF_FULLAUTO=1,
	PACF_JUSTUNLOAD=2,
	PACF_GRENADELOADED=4,
	PACF_NOLAUNCHER=8,
	PACF_FRONTRETICLE=32,
	PACF_ALTRETICLE=64,
	PACF_GRENADEMODE=128,
	PACF_UNLOADONLY=256,
	PACF_NOBULLPUP=512,

	PACS_FLAGS=0,
	PACS_CHAMBER=1,
	PACS_MAG=2, //-1 is ampty
	PACS_ZOOM=3,
	PACS_HEAT=4,
	PACS_BRASS=5,
	PACS_AIRBURST=6,
	PACS_DROPADJUST=7,
};

class HDPacifistHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		if (!e.Replacement)
		{
			return;
		}

		switch (e.Replacement.GetClassName())
		{
			case 'BFG9K':
				if (random[gungrand]() <= 96)
				{
					e.Replacement = "BFGPickupPaci";
				}
				break;
		}
	}
	}


class BFGPickupPaci:IdleDummy{
	override void postbeginplay(){
		super.postbeginplay();
		A_SpawnItemEx("HD7mMag200",flags:SXF_NOCHECKPOSITION);
		if(random(0,2))A_SpawnItemEx("DeadMarine",-3,-3,flags:SXF_NOCHECKPOSITION);
		if(random(0,2))A_SpawnItemEx("HD7mMag200",3,3,flags:SXF_NOCHECKPOSITION);

		bool _; Actor wep;
		[_, wep] = A_SpawnItemEx("HDPacifist",1,1,flags:SXF_NOCHECKPOSITION);
		//HDF.TransferSpecials(self, wep);

		destroy();
	}
}

/*
class HDPacifistRandom:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			let lll=HDPacifist(spawn("HDPacifist",pos,ALLOW_REPLACE));
			if(!lll)return;
			HDF.TransferSpecials(self, lll);
			if(!random(0,2))lll.weaponstatus[0]|=PACF_FULLAUTO;
		}stop;
	}
}
*/
